c
razorpay_pmnt_obj.capture({amount: (caregiver.amount.to_f*100)})
status
c
razorpay_pmnt_obj.amount
razorpay_pmnt_obj["amount']
razorpay_pmnt_obj
        params.merge!({status: razorpay_pmnt_obj.status, price: (caregiver.amount.to_f)})
        params.merge!({status: razorpay_pmnt_obj.status, price: (caregiver.amount.to_f/100)})
 razorpay_pmnt_obj = fetch_payment(params[:payment_id])
 razorpay_pmnt_obj.capture({amount: (caregiver.amount.to_i*100)})
caregiver.amount.to_i
caregiver.amount
 razorpay_pmnt_obj.capture({amount: (caregiver.amount.to_i)})
 razorpay_pmnt_obj.capture({amount: (caregiver.amount.to_i/100)})
 razorpay_pmnt_obj.capture({amount: (caregiver.amount.to_f/100)})
 status = fetch_payment(params[:payment_id]).status
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
 caregiver = User.find(params[:caregiver_id])
c
 @payment = Payment.process_razorpayment(payment_params)
c
params
c
params
parmas
c
params
c
params
parmas
c
link_to "get now", new_user_registration_path, params: {amount: amount}
link_to "get now", new_user_registration_path, data: {amount: amount}
link_to "get now", new_user_registration_path
c
redirect_to :action => "show", :id => @payment.id
c
cc
c
      Payment.new(params)
params.merge!({status: razorpay_pmnt_obj.status, price: razorpay_pmnt_obj.amount||user.price})
 razorpay_pmnt_obj = fetch_payment(params[:payment_id])
razorpay_pmnt_obj.capture({amount: razorpay_pmnt_obj.amount || user.price})
status = fetch_payment(params[:payment_id]).status
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
 user = User.find(params[:caregiver_id])
params
c
x
params[:caregiver_id]
params
c
v
b
b 
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
params
params[:caregiver_id]
user = User.find(params[:caregiver_id])
c
user = User.find(params[:cargiver_id])
c
Payment.new(params)
        params.merge!({status: razorpay_pmnt_obj.status, price: razorpay_pmnt_obj.amount||user.price})
        razorpay_pmnt_obj = fetch_payment(params[:payment_id])
razorpay_pmnt_obj.capture({amount: razorpay_pmnt_obj.amount || user.price})
      status = fetch_payment(params[:payment_id]).status
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
user = User.find(params[:cargiver_id])
c
 razorpay_pmnt_obj.amount
 razorpay_pmnt_obj["amount"]
 razorpay_pmnt_obj
  razorpay_pmnt_obj.capture({amount: 500})
  razorpay_pmnt_obj.capture({amount: user.price})
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
user = User.find(params[:cargiver_id])
c
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
user = User.find(params[:cargiver_id])
c
razorpay_pmnt_obj = fetch_payment(params[:payment_id])
user = User.find(params[:cargiver_id])
c
Payment.process_razorpayment(payment_params)
c
payment_params
User.process_razorpayment(payment_params)
c
User.find(36)
User.find(35)
params
payment_params
c
v
c
patient = user.build_patient(patient_params)
user = User.find params[:user_id]
patient_params
c
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions => [], :speciality_services => [])
patient = user.build_patient(patient_params)
user = User.find params[:user_id]
c
v
c
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions => [], :speciality_services => [])
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions => [])
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions => [], :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions, :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions => [], :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions [], :speciality_services)
params
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions[], :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions, :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions{[]}, :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions, :speciality_services)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions[], :speciality_services)
patient_params
c
patient_params
params
c
patient_params
params
c
params
patient_params
c
params.require(:patient).permit(:first_name, :last_name,:gender,:dob).merge(params[:health_conditions]).to_h
params.require(:patient).permit(:first_name, :last_name,:gender,:dob).merge(params[:health_conditions].to_h)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob).merge("health_conditions")
params.require(:patient).permit(:first_name, :last_name,:gender,:dob).merge(health_conditions)
params.require(:patient).permit(:first_name, :last_name,:gender,:dob).merge(params[:health_conditions])
params.require(:patient).permit(:first_name, :last_name,:gender,:dob, :health_conditions, :speciality_services)
user.build_patient(patient_params).merge(params[:health_conditions])
params[:patient]
params[:patient
params[:user]
patient_params
 user.build_patient(patient_params)
params
 user.build_patient(patient_params)
user = User.find params[:user_id]
parmas
c
params[:controller]
params
c
cc
c
params[:action] != "new"
params[:action] != new
params
c
self.patient_id.zero?
c
select_tag :patient_id, options_from_collection_for_select(@patients.collect{|k| k}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(["Any"]+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_from_collection_select(["Any"]+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_from_collections_select(["Any"]+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_for_select(["Any"]+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_for_select("Any"+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_for_select(["0","fsadf"]+@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_for_select(@patients.collect{|k| ["0","select ooption"]+[k.id, k.first_name]}),{class: "form-control input-md",style: "width: 75%"}
select_tag :patient_id, options_for_select(@patients.collect{|k| ["0","select ooption"]+[k.id, k.first_name]}),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_for_select(@patients.collect{|k| ["0","select ooption"][k.id, k.first_name]}),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_for_select(@patients.collect{|k| [k.id, k.first_name]}),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_for_select(["any"] + @patient, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_for_select(["any"] + @patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(["any"] + @patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(["any"]+@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(["any", "any"]+@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
select_tag :patient_id, options_from_collection_for_select(@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"
@patientsselect_tag :patient_id, options_from_collection_for_select(@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"
@patientsselect_tag :patient_id, options_from_collection_for_select(@patients, "id", "first_name"),{class: "form-control input-md",prompt: 'Select patient',style: "width: 75%"}
@patients
c
self.patient_id
self.patient_id == ""
c
params[:patient_id]
c
resource.patient_id = params[:patient_id]
c
User.first.patients
User.first.patient_id
User.first.patients
User.first.patient
User.first.children
User.first.parent
User.first
User.last
resource.patient_id = params[:patient_id].to_i
resource.patient_id = params[:patient_id].to_i.permit!
resource.patient_id = params[:patient_id].permit!
resource.patient_id = params[:patient_id].permit
User
resource
resource.patient_id = params[:patient_id].to_i
resource.patient_id = params[:patient_id]
resource.patient_id
params[:patient_id]
params
resource.patient_id
resource.patient_id = params[:patient_id]
resource
params
resource
c
params
resource
c
User.new(first_name: params[:first_name],last_name: params[:last_name],email: params[:email],password: params[:password],password_confirmation: params[:password_confirmation],avatar: params[:avatar])
c
params[:avatar]
User.new(first_name: params[:first_name],last_name: params[:last_name],email: params[:email],password: params[:password],password_confirmation: params[:password_confirmation],avatar: params[:avatar])
c
User.new(first_name: params[:first_name],last_name: params[:last_name],email: params[:email],password: params[:password],password_confirmation: params[:password_confirmation],avatar: params[:avatar])
c
params[:avatar]
params
User
User.new(first_name: params[:first_name],last_name: params[:last_name],email: params[:email],password: params[:password],password_confirmation: params[:password_confirmation],avatar: params[:avatar])
c
params
parmas
c
params[:user]
params[:password]
params
c
resource.add_role params[:role]
resource.add_role = "user"
resource.add_role(:params[:role])
resource.add_role(params[:role])
resource.add_role = params[:role]
resource.add_roles = params[:role]
params[:role]
params
resource
c
User::ROLES
c
User::ROLES
